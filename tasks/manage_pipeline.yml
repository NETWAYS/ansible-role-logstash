---

- name: Check if Logstash pipeline already exists
  stat:
    path: "/etc/logstash/conf.d/{{ item.name }}"
  register: "pipeline_stat"

- name: Check who managed pipeline in last run
  shell: >
    "set -e pipefail ;
    grep -e '^# source:{{ item.name }}'
    cut -d: -f3"
  register: "pipeline_manager"
  when: "pipeline_stat.stat.isdir | bool "

- name: Delete directory if changing manager
  file:
    path: "/etc/logstash/conf.d/{{ item.name }}"
    state: absent
  when:
  - "pipeline_manager.stdout == local"
  - "{{ item.source }} is defined"

- name: Create Logstash pipeline directories
  file:
    path: "/etc/logstash/conf.d/{{ item.name }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items: "{{ logstash_pipelines }}"

- name: Check out pipeline configuration
  git:
    repo: "{{ item.source }}"
    dest: "/etc/logstash/conf.d/{{ item.name }}"
    version: "{{ item.version | default('main') }}"
  with_items: "{{ logstash_pipelines }}"
  when: item.source is defined
  notify:
  - Restart Logstash noauto

- name: Create simple input
  template:
    src: simple-input.conf.j2
    dest: "/etc/logstash/conf.d/{{ item.name }}\
    /input.conf"
    owner: root
    group: root
    mode: 0644
  with_items: "{{ logstash_pipelines }}"
  when: item.input is defined
  notify:
  - Restart Logstash noauto

- name: Create simple output
  template:
    src: simple-output.conf.j2
    dest: "/etc/logstash/conf.d/{{ item.name }}\
    /output.conf"
    owner: root
    group: root
    mode: 0644
  with_items: "{{ logstash_pipelines }}"
  when: item.output is defined
  notify:
  - Restart Logstash noauto
